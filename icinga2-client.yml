---
- hosts: all
  vars_files:
      - vars/icinga-vars.yml
      - vars/services.yml

  tasks:
     - name: Ensure that icinga repo exist
       apt_repository:
         repo=ppa:formorer/icinga
         state=present
       when: ansible_distribution == 'Ubuntu'

     - name: Update apt cache if too old
       apt:
         update_cache=yes cache_valid_time=14400

     - name: Ensure nagios plugins package is installed
       apt:
         name=nagios-plugins state=present

     - name: Create Icinga2 host object through API
       uri:
          url=https://{{ icinga_ip }}:5665/v1/objects/hosts/{{ hostname }}
          method=PUT
          user={{ api_user }}
          password={{ api_pass }}
          headers={'Accept':'application/json'}
          body='{"templates":["generic-host"],"attrs":{"address":"{{ host_ip }}","check_command":"hostalive","vars.os":"Linux"}}'
          validate_certs={{ validate }}
          body_format=json
          status_code=200,500

     - name: Creating Icinga2 services for host {{ hostname }} through API
       uri:
          url=https://{{ icinga_ip }}:5665/v1/objects/services/{{ hostname }}!{{ item.name }}
          method=PUT
          user={{ api_user }}
          password={{ api_pass }}
          headers={'Accept':'application/json'}
          body='{"templates":["generic-service"],"attrs":{"display_name":"{{ item.name }}","check_command":"dummy","check_interval":"86400","vars.dummy_state":3,"vars.dummy_text":"No Passive Check Result Received"}}'
          validate_certs={{ validate }}
          body_format=json
          status_code=200,500
       with_items:
         - "{{ services }}"

     - name: Copy scripts for passive check results
       template:
          src=passive-result.py.j2
          dest={{ checks_path }}passive-{{ item.name }}-result.py
          mode=0755
          owner=root
          group=root
       with_items:
         - "{{ services }}"

     - name: Copy scripts for data collection
       copy:
          src={{ scripts_path }}{{ item.plugin }}
          dest={{ checks_path }}
          mode=0755
          owner=root
          group=root
       when: item.plugin is defined
       with_items:
         - "{{ services }}"

     - name: Creating cron jobs for checks
       cron:
          name="passive {{ item.name }} checks"
          job="{{ checks_path }}passive-{{ item.name }}-result.py"
          state=present
       with_items:
         - "{{ services }}"
...
