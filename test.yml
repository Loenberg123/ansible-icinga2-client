- hosts: all
  vars_files:
    - vars/redis/thresholds.yml

  tasks:
#   - name: Show group_names
#     debug:
#        var=group_names
#
#   - name: save checks
#     shell: ls /usr/lib/nagios/plugins/ | grep check_
#     shell: service --status-all | grep + | awk -F"]" '{print $2}'
#     register: checks
#
#   - name: show services
#     debug:
#       var=checks.stdout_lines
#

   - name: Get ports
#     shell: netstat -putan | grep redis | awk -F ':' '{print $2}' | cut -d" " -f 1 | uniq
#     shell: netstat -putan | grep apache2 | cut -d ':' -f 4 | cut -d' ' -f 1 | uniq
#     shell: netstat -putan | grep redis | cut -d ':' -f 2 | cut -d' ' -f 1
#     shell: netstat -putan | grep haproxy | cut -d':' -f 2 | cut -d' ' -f1 | sort | uniq
     shell: grep -A 10 'frontend' /etc/haproxy/haproxy.cfg | grep bind | cut -d':' -f2
     register: haproxy_ports

#   - debug:
#       var: apache_ports.stdout_lines
#   - name: test {{ nginx_ports.stdout_lines }}
#     debug:
#        msg=test

#   - local_action: copy content={{ nginx_port.stdout }} dest=./ports.txt
#   - local_action: shell awk '$0="  port{{':'}} "$0' ./ports.txt > ./nginxports.yml
#   - local_action: lineinfile line=ports{{':'}} insertbefore=BOF path=./nginxports.yml
#   - local_action: blockinfile block="{% for lines in nginx_port.stdout_lines %}  - name{{':'}} nginx-http-{{ lines }}\n    command{{':'}}\n      check_http -I {{ ansible_default_ipv4.address }} -p {{ lines }}\n{% endfor %}" insertafter="nginx.sh" path=./nginx.yml
#   - local_action: blockinfile block="{% for lines in redis_ports.stdout_lines %}  - name{{':'}} redis-{{ lines }}\n    command{{':'}}\n      check_redis.py -s {{ ansible_hostname }} -p {{ lines }} -w {{ redis_w }} -c {{ redis_c }}\n    plugin:\n      check_redis.py\n{% endfor %}" insertafter="redis:" path=./redis.yml
#   - local_action: blockinfile block="{% for lines in apache_ports.stdout_lines %}  - name{{':'}} apache-status-{{ lines }}\n    command{{':'}}\n      check_apachestatus.py -H {{ ansible_default_ipv4.address }} -p {{ lines }} -m idle\n    plugin:\n      check_apachestatus.py{% endfor %}" insertafter="apache_service-py" path=./apache.yml marker="# APACHE STATUS PORTS"
#   - local_action: blockinfile block="{% for lines in apache_ports.stdout_lines %}  - name{{':'}} apache-http-{{ lines }}\n    command{{':'}}\n      check_http -I {{ ansible_default_ipv4.address }} -p {{ lines }}\n{% endfor %}" insertafter="EOF" path=./apache.yml
#   - local_action: blockinfile block="{% for lines in mongo_ports.stdout_lines %}  - name{{':'}} mongod-{{ lines }}\n    command{{':'}}\n      check_mongodb.py -H {{ ansible_default_ipv4.address }} -P {{ lines }} -D\n    plugin:\n      check_mongodb.py\n{% endfor %}" insertafter="mongo:" path=./mongo.yml
   - local_action: blockinfile block="{% for lines in haproxy_ports.stdout_lines %}  - name{{':'}} haproxy-http-{{ lines }}\n    command{{':'}}\n      check_http -i {{ ansible_default_ipv4.address }} -p {{ lines }}\n{% endfor %}" insertafter="haproxy:" path=./haproxy.yml
